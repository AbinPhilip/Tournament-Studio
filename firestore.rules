rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read for most collections
    match /tournaments/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can manage tournaments
    }
    
    match /organizations/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /teams/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /sponsors/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /matches/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can update scores/matches
    }

    // Allow users to manage their own data
    match /users/{userId} {
      allow read: if true;
      allow create: if request.resource.data.role in ['admin', 'super', 'update', 'inquiry', 'individual'];
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /rolePermissions/{role} {
      allow read: if true;
      allow write: if request.auth != null; // Should be restricted to superusers only from client
    }
    
    // Image metadata rules
    match /images/{imageId} {
      allow read: if true; // Allow public read for gallery display
      // Allow create only if the uploaderId in the new document matches the user's ID
      allow create: if request.auth != null && request.resource.data.uploaderId == request.auth.uid;
      // Allow delete only if the user requesting is the one who uploaded it
      allow delete: if request.auth != null && resource.data.uploaderId == request.auth.uid;
    }
  }
}
