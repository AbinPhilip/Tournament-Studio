
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access to most collections for the presenter view, etc.
    match /tournaments/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can write
    }

    match /matches/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /teams/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /organizations/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /sponsors/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Secure user and permission data
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId; // Users can only write to their own doc
      allow create, delete: if request.auth != null; // Admins should handle this via backend logic
    }
    
    match /rolePermissions/{role} {
      allow read: if true;
      allow write: if request.auth != null; // Controlled by admin/super roles
    }
    
    match /images/{imageId} {
      allow read: if true; // Public read access
      // Allow creation if user is authenticated
      allow create: if request.auth != null;
      // Allow deletion only if the user is the one who uploaded it
      allow delete: if request.auth != null && resource.data.uploaderId == request.auth.uid;
    }

  }
}
