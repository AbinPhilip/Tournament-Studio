rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read access for presenter view data
    match /tournaments/{docId} {
      allow get, list: if true;
    }
    match /matches/{docId} {
      allow get, list: if true;
    }
    match /teams/{docId} {
      allow get, list: if true;
    }
    match /organizations/{docId} {
      allow get, list: if true;
    }
    match /sponsors/{docId} {
      allow get, list: if true;
    }

    // Allow authenticated users to read their own data
    match /users/{userId} {
      allow get: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
    
    // Allow admins/super to manage users, permissions, and all tournament data
    match /users/{userId} {
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }

    match /rolePermissions/{role} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super';
    }

    // Collections managed by admin/super roles
    match /tournaments/{docId} {
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
     match /organizations/{docId} {
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
     match /sponsors/{docId} {
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
     match /teams/{docId} {
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }

    // Allow match updates by admin, super, and update roles
    match /matches/{docId} {
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super', 'update', 'court'];
    }
  }
}