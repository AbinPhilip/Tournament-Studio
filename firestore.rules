rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // PUBLIC: Allow anyone to read non-sensitive public data
    match /tournaments/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can write
    }
    match /organizations/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /sponsors/{docId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
     match /teams/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
     match /matches/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // AUTHENTICATED: Allow any authenticated user to read user profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if true; // Allow new user creation
      allow update, delete: if request.auth != null && request.auth.uid == userId; // Only owner can edit/delete
    }
    
    // IMAGE METADATA: Allow authenticated users to manage their own image metadata
    match /images/{imageId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uploaderId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uploaderId;
    }
    
     // ROLE PERMISSIONS: Only super users can manage roles
    match /rolePermissions/{role} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super';
    }
  }
}
