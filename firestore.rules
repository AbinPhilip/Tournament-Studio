
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Shared collections (e.g., tournament, organizations, teams) are generally readable by anyone
    // but writable only by admins.
    match /tournaments/{docId} {
      allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
    match /organizations/{docId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
    match /sponsors/{docId} {
        allow read: if true;
        allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
    match /teams/{docId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super'];
    }
    
    // User data can only be read/written by the user themselves or by an admin.
    match /users/{userId} {
      allow read: if request.auth.uid != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super']);
      allow write: if request.auth.uid != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super']);
    }

    // Matches are readable by anyone, but writable by admins and update users.
    match /matches/{matchId} {
      allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super', 'update', 'court'];
    }

    // Role permissions can only be managed by super users.
    match /rolePermissions/{roleId} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super';
    }

    // Images collection rules
    match /images/{imageId} {
      // Anyone can see any image
      allow read: if true;
      // Anyone can create an image record
      allow create: if request.auth.uid != null && request.resource.data.uploaderId == request.auth.uid;
      // Only the uploader can delete their own image record
      allow delete: if request.auth.uid != null && resource.data.uploaderId == request.auth.uid;
    }
  }
}
