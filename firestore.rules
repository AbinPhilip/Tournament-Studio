rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Users, Teams, Organizations, Matches, Tournament, Sponsors can be managed by admins/super users ---
    // This simplified rule assumes that all write operations for these core collections
    // are handled through secured Genkit flows or trusted client-side admin roles.
    // Public read access is granted for most collections so all users can see tournament data.
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null; // Managed in Settings by logged-in users
    }
    match /rolePermissions/{role} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins should do this
    }
    match /organizations/{orgId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    match /teams/{teamId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
     match /sponsors/{sponsorId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    match /tournaments/{tourneyId} {
      allow read, write: if true; // Open for simplicity, can be locked down
    }
    match /matches/{matchId} {
      allow read, write: if true; // Open for simplicity, allows umpires/flows to update
    }

    // --- Image Metadata Rules ---
    // Any authenticated user can create an image record.
    // They can only read or delete their own records.
    match /images/{imageId} {
      allow read, delete: if request.auth != null && resource.data.uploaderId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uploaderId == request.auth.uid;
    }
  }
}
